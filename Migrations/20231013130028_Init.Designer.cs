// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnimeListSync.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20231013130028_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("Database+AnimeAssociation", b =>
                {
                    b.Property<long>("DatabaseId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ProviderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DatabaseId", "ProviderId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Associations");
                });

            modelBuilder.Entity("Database+DatabaseAnime", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DatabaseSeries");
                });

            modelBuilder.Entity("Database+Provider", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Providers");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Description = "MyAnimeList (https://myanimelist.net)",
                            Name = "MyAnimeList"
                        },
                        new
                        {
                            Id = 1,
                            Description = "Shinden (https://shinden.pl)",
                            Name = "Shinden"
                        });
                });

            modelBuilder.Entity("Database+ProviderAnime", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Provider")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ProviderSeries");
                });

            modelBuilder.Entity("Database+AnimeAssociation", b =>
                {
                    b.HasOne("Database+DatabaseAnime", "Database")
                        .WithMany()
                        .HasForeignKey("DatabaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database+ProviderAnime", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Database");

                    b.Navigation("Provider");
                });
#pragma warning restore 612, 618
        }
    }
}
